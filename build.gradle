buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.0-beta-1103'
  }
}
   
plugins {
  id 'application'
  id 'idea'
  id 'com.github.johnrengelman.shadow' version '1.2.2'
}

apply plugin: "kotlin"

version = "1.0"

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

[compileJava, compileTestJava]*.options*.encoding = "UTF-8"

mainClassName = 'com.github.plombardi89.hello.HelloWorldApplication'

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

ext {
  dropwizardVersion = '0.9.1'
  kotlinVersion = '1.0.0-beta-1103'
}

repositories {
  jcenter()
}

sourceSets {
  integTest {
    kotlin.srcDir file('src/integTest/kotlin')
    java.srcDir file('src/integTest/java')
    resources.srcDir file('src/integTest/resources')
  }
}

task integTest(type: Test) {
  testClassesDir = sourceSets.integTest.output.classesDir
  classpath = sourceSets.integTest.runtimeClasspath
}

check.dependsOn integTest

dependencies {
  compile (
    "io.dropwizard:dropwizard-core:${dropwizardVersion}",
    "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}",
    "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}",
  )

  testCompile("io.dropwizard:dropwizard-client:${dropwizardVersion}")
  testCompile("io.dropwizard:dropwizard-testing:${dropwizardVersion}") {
    exclude group: "org.glassfish.jersey.test-framework.providers"
  }

  testCompile("org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-inmemory:2.17")

  integTestCompile sourceSets.main.output
  integTestCompile configurations.testCompile
  integTestCompile sourceSets.test.output
  integTestRuntime configurations.testRuntime
}

jar {
  manifest {
    attributes 'Main-Class': mainClassName
  }
}

shadowJar {
  mergeServiceFiles()

  exclude "META-INF/*.SF"
  exclude "META-INF/*.DSA"
  exclude "META-INF/*.RSA"
}

run {
  args 'server', './src/dist/dev.yml'
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.8'
}
